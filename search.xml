<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[tomcat配置之内存配置]]></title>
      <url>%2F2017%2F05%2F18%2Fpro%2Ftomcat%E9%85%8D%E7%BD%AE%E5%86%85%E5%AD%98%2F</url>
      <content type="text"><![CDATA[tomcat 配置内存 进入tomcat bin目录windows下找到 配置如下 找到cd ..set “CATALINA_HOME=%cd%”在后面添加上 set JAVA_OPTS=-Xms256m -Xmx512m -XX:PermSize=128M -XX:MaxNewSize=256m -XX:MaxPermSize=256m -Djava.awt.headless=true 修改tomcat title 在catalina.bat 中添加 set title=8081[%DATE%] 即可效果如下]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[mybatis 自动生成dao与po bean]]></title>
      <url>%2F2017%2F05%2F11%2Fpro%2Fmybatis%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%E4%BB%A3%E7%A0%81%2F</url>
      <content type="text"><![CDATA[mybatis自动生成代码工具 使用mybatis自动生成代码工具 首先连接到数据库 映射数据生成文件到本地 1.新建一个maven项目 在pom.xml 文件中导入依赖 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt; &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt; &lt;groupId&gt;com.star.mybatis&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator&lt;/artifactId&gt; &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt; &lt;packaging&gt;jar&lt;/packaging&gt; &lt;name&gt;mybatis-generator&lt;/name&gt; &lt;url&gt;http://maven.apache.org&lt;/url&gt; &lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;/properties&gt; &lt;build&gt; &lt;finalName&gt;mybatis-generator&lt;/finalName&gt; &lt;pluginManagement&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.3.2&lt;/version&gt; &lt;configuration&gt; &lt;configurationFile&gt;src/main/resources/generatorConfig.xml&lt;/configurationFile&gt; &lt;verbose&gt;true&lt;/verbose&gt; &lt;overwrite&gt;true&lt;/overwrite&gt; &lt;/configuration&gt; &lt;executions&gt; &lt;execution&gt; &lt;id&gt;Generate MyBatis Artifacts&lt;/id&gt; &lt;goals&gt; &lt;goal&gt;generate&lt;/goal&gt; &lt;/goals&gt; &lt;/execution&gt; &lt;/executions&gt; &lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-core&lt;/artifactId&gt; &lt;version&gt;1.3.2&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt; &lt;/plugin&gt; &lt;/plugins&gt; &lt;/pluginManagement&gt; &lt;/build&gt;&lt;/project&gt; 2.配置generatorConfig.xml文件 在resource中新建一个generatorConfig.xml xml文件 配置如下 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;!DOCTYPE generatorConfiguration PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot; &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;&lt;generatorConfiguration&gt; &lt;classPathEntry location=&quot;F:/work/java/project/base_sdk/qq/ojdbc14-10.2.0.4.0.jar&quot; /&gt; &lt;context id=&quot;my&quot; targetRuntime=&quot;MyBatis3&quot;&gt; &lt;commentGenerator&gt; &lt;property name=&quot;suppressDate&quot; value=&quot;false&quot; /&gt; &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot; /&gt; &lt;/commentGenerator&gt; &lt;!-- &lt;jdbcConnection driverClass=&quot;oracle.jdbc.driver.OracleDriver&quot; connectionURL=&quot;jdbc:mysql:@localhost:3306&quot; userId=&quot;root&quot; password=&quot;&quot; /&gt; --&gt; &lt;jdbcConnection driverClass=&quot;oracle.jdbc.driver.OracleDriver&quot; connectionURL=&quot;jdbc:oracle:thin:@10.10.xx.xxx:1521:xxxx&quot; userId=&quot;c##xxxxx&quot; password=&quot;xxxx&quot; /&gt; &lt;!-- 配置生产po对象 --&gt; &lt;javaModelGenerator targetPackage=&quot;com.aizhuwu.pro.main.po&quot; targetProject=&quot;F:\work\java\tab&quot;&gt; &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt; &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot; /&gt; &lt;/javaModelGenerator&gt; &lt;!-- mappring.xml 文件配置 --&gt; &lt;sqlMapGenerator targetPackage=&quot;com.aizhuwu.pro.main.dao&quot; targetProject=&quot;F:\work\java\tab&quot;&gt; &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt; &lt;/sqlMapGenerator&gt; &lt;!-- DAO接口配置 --&gt; &lt;javaClientGenerator targetPackage=&quot;com.aizhuwu.pro.main.dao&quot; targetProject=&quot;F:\work\java\tab&quot; type=&quot;XMLMAPPER&quot;&gt; &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot; /&gt; &lt;/javaClientGenerator&gt; &lt;!--&lt;table tableName=&quot;T_FEE_AGTBILL&quot; domainObjectName=&quot;FeeAgentBill&quot; enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot; enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; selectByExampleQueryId=&quot;false&quot;/&gt; --&gt; &lt;!-- 配置数据表 和 对应的 java对象名 多个表一起生成数据 就多个table标签 --&gt; &lt;table tableName=&quot;TB_DQDP_ORGANIZATION&quot; domainObjectName=&quot;Organization&quot; enableCountByExample=&quot;false&quot; enableUpdateByExample=&quot;false&quot; enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; selectByExampleQueryId=&quot;false&quot;&gt; &lt;/table&gt; &lt;/context&gt;&lt;/generatorConfiguration&gt; 12&lt;classPathEntry location=&quot;F:/work/java/project/base_sdk/qq/ojdbc14-10.2.0.4.0.jar&quot; /&gt; 改地址为oracle jdbc驱动包，如果是mysql则导入mysql 导入对应的驱动包即可 ###注意 oracle c12 账号特性是c##开头 用maven执行 mybatis-generator:generate 执行完后在配置的路径就可以看到对应的文件 接下来吧对应的文件考到项目中就可以使用]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[如何辨认你身边的真正的“聪明人”？]]></title>
      <url>%2F2017%2F04%2F24%2Fpro%2F%E8%BA%AB%E8%BE%B9%E8%81%AA%E6%98%8E%E4%BA%BA%2F</url>
      <content type="text"><![CDATA[首先要明确的是一些基本原则。首先，具有特定领域的专业知识不代表聪明。比如一个下水道工人和一个挖掘机工人，各自都是各自职业领域的老手，哪个更聪明？这就不好说了。所以分辨的标准不应该是针对特定领域的，而应该是普适的。 再比如看学历，也不一定靠谱。我们抛开盖茨、乔布斯这些辍学的不谈，一个本科生和一个博士生哪个聪明？这也不好说，说不定本科生本科期间就做出了不错的科研成果，但是本科毕业没有继续做科研而直接去工作了，那他一定比博士生笨或者聪明吗？说不准的。 还有比如看出身，也不靠谱。因为个人经历和交友圈的关系，我周围的很多朋友都是名校出身，北清复交牛剑HYPS什么的很多，很多聚会上名校学生的数量远比非名校的多，那这种情况下出身本身就不具有太大的分辨性。虽然名校出来的普遍会让人觉得聪明点（具体原因可以参考下文），但是即使是同一个学校出来的人，也会有很容易被识别出来的聪明程度的差别。 那么我会通过什么来辨别聪明人呢？我有六个标准，两两一组分为基础指标，现实指标，和高层指标三个类别。基础、现实、高层的分类不是想说明轻重和高低，只是为了方便大家理解。 基础指标基础指标的第一个标准，是元认知（Metacognition）能力。 元认知能力，就是“对于认知的认知”和“关于知识的知识”，简单来说就是对于自我的认知过程的思考。关于元认知，网上有不少资料，大家可以通过搜索引擎找一下通俗的材料，感兴趣的也可以找相关的心理学文献读一下。 具有强元认知能力的人，通常表现是学习能力很强，因为他们对于自己的认知和学习过程很了解，能够在快速的自我思考和自省后产生出优化过的学习策略。 他们对自己的认知能力有较强的管控能力，懂得利用自己的认知能力的优势和已有知识框架来调节和评估新知识的摄入，这些人能够很快的把新知识融入到已有的知识当中。用乔布斯的话说，就是把已经划出的点连起来，而元认知能力高的人连得特别快。 ##基础指标的第二个标准，是有具有逻辑性的思维跳跃能力。 一般的交谈过程，通常就是先讲A，再讲B，再讲C，再讲D…… 但是我发觉，当和一些比较聪明的人聊天的时候，或者看其他的聪明人聊天的时候，通常不是一步一步走，而是跨着大步跳的，也就是先讲A，再讲D，再讲F，再讲J……这样。这种ADFJ的交谈方式，和前面的ABCD的交谈方式在逻辑上是一样的，并不是随机的思维跳跃，而是一些中间的逻辑步骤，因为交谈的双方都已经提前想到，并且一个眼神一个动作就心照不宣了，所以不需要每一步都讲一遍，直接说下一步就好了。 比如之前有个我觉得比我聪明好多的做医生的朋友来我家做客，我在厨房做饭，客人们在闲聊，中间聊到癌症的事情。我就想到个段子，然后说“骑摩托车戴安全帽也能增加得癌症的概率。”这个段子其实说的还是蛮直接的，我也觉得对方肯定听得懂，所以就没有补充或者继续讲，而那位医生朋友就直接回了一句“是啊，上次和主任一起去查房，主任就说其中一位老太太比其他病人更可能得癌症，因为she has the syndrome of having too many birthdays。”然后大家就会心一笑。 跟聪明程度相仿的人交谈起来跳跃的节奏是很舒适的，逻辑上也能很自然的过渡。但是如果两个人节奏差别过大，一方要经常说完A后补充说B和C才能继续说D，甚至中间还要加个B1、B2，那就是另外一种情况了。 现实指标现实指标的第一个标准，是好奇心。 其实，前面提到的元认知和思维跳跃，都属于聪明的下层建筑，而最能直观体现一个人是否聪明的标准是好奇心。 一个聪明人，通常是对生活中各种事情充满了广泛的好奇的，也正是这种好奇，让他有更多的机会获得新的知识。 好奇心和聪明程度是个鸡和蛋的情况。一个人的学习能力再强，如果好奇心不够，那他也不会去了解各种新东西；而如果一个人缺乏对事物的广泛了解，他就很难看到那些自己不理解的东西，也就不容易产生较强的好奇心。 用苏格拉底的话说，“我唯一知道的事，就是我一无所知。” 现实指标的第二个标准，是用简单的语言解释复杂的问题的能力。 经常能在包括知乎等网络社区，看到一些专业人士解释专业的或者技术性的问题，他们会很热心的花很多时间讲问题背后的原理，列出各种外行人很难看懂的公式、推导过程和专业术语，自己解答的很辛苦，读者大多没看懂，双方都不开心——“我都花了这么多功夫讲了你们怎么还是听不懂”和“你讲了这么一大堆不明觉厉，我还是不懂。” 而我接触到的一些很聪明的人，很多都在自己的专业领域有深入的研究，而这些聪明人的共同特点是在解释专业问题时会刻意避免使用别人可能听不懂的大词、黑话和专业用语。 刻意的选用简单的语言，至少说明两个问题，一是说话的人懂得换位思考，能够从对方角度分析和评价自己的表达，是对于知识的学习具有评估能力的体现；其次，很多专业用语和大词其实是专家直接沟通的工具，当你面对的听众不是专家的时候，你就不能用这些工具“偷懒”，这样对于说话者的要求就更高了，对于知识掌握程度的要求也更高。知乎上的一些比较有名的心理学、统计学、健身等等专业领域的用户，解答问题时通常都有这样的特点。 有个很有意思的年度科普活动叫作火焰挑战（flame challenge），组织方每年会出一个题目，然后要求参赛者制作一个视频，把这个题目用一个11岁小孩能听懂的话解释清楚。听起来很有趣，但是做起来还是很难的，历年的题目有“火焰是什么”、“颜色是什么”等。各位可以试试自己解释下“火焰是什么”这个题目，然后想一下你的解释能不能让一个11岁的小孩听懂。知乎上就有类似的题目，各位可以去看看那些题目下的回答是不是用简单的语言说清楚了的。 高层指标高层指标的第一个标准，是对于观点的态度。 具体表现在几个方面，比如对于自己不了解的领域少发表观点，这其实是上面说到的懂得越多越有好奇心的一种侧面体现；还有就是能够容纳不同的观点，甚至完全相反的观点，这其实是上面提到的换位思考能力的一种侧面体现；还有就是不迷信、不执迷不悟，当新的信息和证据证明自己原来的观点是错误的时候，能够改变自己的观点。 这几点说起来不难，其实大家都会说，但是自身做起来的时候真的蛮难的，因为这还要涉及到情商、面子等社交属性。 高层指标的第二个标准，是对于别人的态度。 一个人是不是善良，是很重要的一个标准。当然，准确的来说，善良并不代表聪明，聪明的坏人多了去了，事实上，想要做一个成功的坏人，也是需要聪明的，不够聪明的话坏事都做不到太大。 但是“好人”和“坏人”是很主观的判断。通常情况下，每个人在自己心中都是好人，连恐怖份子都不把自己当坏人的，他们在自己眼中是自由斗士和真理的捍卫者，是非常“高尚”的。 所以我说的善良，其实是对于别人的态度，就是说他是否能够通过分享、辅导、以身作则等方式帮助别人改善和提高，达成共赢的局面。帮助别人提高，想想都是极难的，大概是要把前面的五个标准都完成的差不多才能做到。 当然不能排除存在那些很聪明，但是坚持“不但我要成功，而且我要别人都失败”的人，不过这种人我还真是不感兴趣，这样的人是不是聪明无所谓，我总是会尽量避免的。 文章来源：知乎 文|谢熊猫君]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[android均匀显示textview]]></title>
      <url>%2F2017%2F04%2F16%2Fpro%2Fandroid%2Ftext%E5%88%86%E5%B8%83%2F</url>
      <content type="text"><![CDATA[均匀分布textview 许多情况下，我们需要把文字均匀分布而且要保持几个空间的宽度一致。并且Android里又没有这种控或者属性风格之类 可以用空格来实现，但是空格会对不齐，字体大小改变后就不准确，基本无法实现功能。 在这里我给大家分享一个我自己写的控件，可以原理很简单是用画笔和画板将文字画出来，先看效果图如下，文章后面有控件下载地址需要的童鞋可以下载使用 使用非常简单，与textview使用方法一致 只需settext()即可 他的原理就是先获取文字数量，用控件的宽度来除以文字数量为宽度差，然后对应画出文字，降文字转化为数组，对应数组指针乘以宽度减去文字本身的宽度的一半，第一个文字和最后一个文字进行处理。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485public class LineTextView extends TextView &#123; private Context context; private int viewWidth; private int viewHight; private int oneWidth; private int oneHight; private int num; private Paint p; private String str; private String[] texts; private int textSize = 15; public LineTextView(Context context) &#123; super(context); this.context = context; init(); &#125; public LineTextView(Context context, AttributeSet attrs) &#123; super(context, attrs); this.context = context; init(); &#125; @Override protected void onDraw(Canvas canvas) &#123; super.onDraw(canvas); init(); drawText(canvas); &#125; private void drawText(Canvas canvas) &#123; if (num == 0) return; int lineWidth = viewWidth / num; int drawY = (viewHight - oneHight) / 2 + oneHight; for (int i = 0; i &lt; num; i++) &#123; if (i == num - 1) &#123;// 最后一个 canvas.drawText(texts[i], viewWidth - oneWidth - dip2px(context, 2), drawY, p); &#125; else if (i != 0 &amp;&amp; i != num - 1) &#123;// canvas.drawText(texts[i], i * lineWidth + lineWidth / 2 - oneWidth / 2, drawY, p); &#125; else &#123;// 第一个 canvas.drawText(texts[i], i * lineWidth + dip2px(context, 2), drawY, p); &#125; &#125; &#125; private void init() &#123; this.setPadding(0, 0, 0, 0); viewWidth = this.getWidth(); viewHight = this.getHeight(); &#125; public void setText(String str) &#123; if (str == null) return; p = new Paint(); p.setColor(context.getResources().getColor(R.color.m_black)); p.setTextSize(dip2px(context, textSize)); this.str = str; num = str.length(); int width = ce(&quot;汉&quot;).width(); this.oneWidth = width; this.oneHight = ce(str).height(); String[] strs = new String[num]; for (int i = 0; i &lt; num; i++) &#123; strs[i] = str.substring(i, i + 1); &#125; this.texts = strs; this.invalidate(); &#125; public void setTestSize(int size) &#123; this.textSize = size; if (str != null) setText(str); &#125; public Rect ce(String str) &#123; Rect rect = new Rect(); p.getTextBounds(str, 0, 1, rect); return rect; &#125; /** * 根据手机的分辨率�? dp 的单�? 转成�? px(像素) */ public static int dip2px(Context context, float dpValue) &#123; final float scale = context.getResources().getDisplayMetrics().density; return (int) (dpValue * scale + 0.5f); &#125; 下载地址 http://pan.baidu.com/s/1eRZh8ki]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[api markdown 文档模板]]></title>
      <url>%2F2017%2F04%2F16%2Fpro%2Fapidoc%2F</url>
      <content type="text"><![CDATA[修改历史 日期 内容 2016-11-04 增加8根据群id查询群 2016-11-05 7接口增加group_desc字段 约束 约束 描述 ? 非必要参数 1 必要参数 2 并集关系，非必要，但是必须有一个 数据结构 12&gt; &#123;&quot;msg&quot;:&#123;&quot;code&quot;:&quot;0000&quot;,&quot;msg&quot;:&quot;请求成功&quot;&#125;,&quot;data&quot;:&#123;&#125;&#125;&gt; 1.列表账号和群组信息查询 im/imAction!findAcctount.action输入参数 参数名称 参数名 类型 所属类 约束 描述 群组id列表 groupRows list 2 群组id列表 联系人id列表 memberRows list 2 联系人id列表 输出参数 参数名称 参数名 类型 所属类 约束 描述 data 账号列表 memberRows list data ? 账号id id String ImAcctountBean ? 手机号码 mobile String ImAcctountBean ? 头像 head_url String ImAcctountBean ? 别名 nick String ImAcctountBean ? 账号 account String ImAcctountBean ? 性别 sex String ImAcctountBean ? 1.男2.女 年龄 age String ImAcctountBean ? 身高 height String ImAcctountBean ? 居住地 residence String ImAcctountBean ? 群组id列表 groupRows list data ? 活动id activity_id String ImGroupBean ? 群id group_id String ImGroupBean ? 群创建时间 create_time String ImGroupBean ? 群名称 group_name String ImGroupBean ? 群简介 group_desc String ImGroupBean ? 群头像 group_head String ImGroupBean ? 群成员 group_member List ImGroupBean ? 群主 account String ImGroupBean ? 2.根据活动id查询群是否存在 im/imAction!findActivityGroup.action输入参数 参数名称 参数名 类型 所属类 约束 描述 活动id activityId String 1 输出参数 参数名称 参数名 类型 所属类 约束 描述 data 群组对象 groupData ImGroupBean data ? 活动id activity_id String ImGroupBean ? 群id group_id String ImGroupBean ? 群创建时间 create_time String ImGroupBean ? 群名称 group_name String ImGroupBean ? 群简介 group_desc String ImGroupBean ? 群头像 group_head String ImGroupBean ? 群成员 group_member List ImGroupBean ? 群主 account String ImGroupBean ? 3.根据活动id创建群组 im/imAction!createActivityGroup.action输入参数 参数名称 参数名 类型 所属类 约束 描述 群主 account String 1 活动id activityId String ? 群名称 groupName String 1 群简介 groupDesc String 1 群头像 groupHead String ? 群成员账号 groupMembers List 1 成员account 输出参数 参数名称 参数名 类型 所属类 约束 描述 data 群组id groupId String data ? 4.根据手机号码模糊查询用户 im/imAction!findImMobile.action输入参数 参数名称 参数名 类型 所属类 约束 描述 手机号码关键字 mobile String 1 输出参数 参数名称 参数名 类型 所属类 约束 描述 data 用户组 imAcctountBeans List data ? 账号id id String ImAcctountBean ? 手机号码 mobile String ImAcctountBean ? 头像 head_url String ImAcctountBean ? 别名 nick String ImAcctountBean ? 账号 account String ImAcctountBean ? 性别 sex String ImAcctountBean ? 1.男2.女 年龄 age String ImAcctountBean ? 身高 height String ImAcctountBean ? 居住地 residence String ImAcctountBean ? 5.获取群人员 im/imAction!getGroupMember.action输入参数 参数名称 参数名 类型 所属类 约束 描述 群id group_id String 1 输出参数 参数名称 参数名 类型 所属类 约束 描述 data 账号列表 memberRows list data ? 账号id id String ImAcctountBean ? 手机号码 mobile String ImAcctountBean ? 头像 head_url String ImAcctountBean ? 别名 nick String ImAcctountBean ? 账号 account String ImAcctountBean ? 性别 sex String ImAcctountBean ? 1.男2.女 年龄 age String ImAcctountBean ? 身高 height String ImAcctountBean ? 居住地 residence String ImAcctountBean ? 6.批量添加群人员 im/imAction!addGroupMembers.action输入参数 参数名称 参数名 类型 所属类 约束 描述 群id group_id String 1 成员 memberRows List 1 需要添加的成员列表 输出参数 参数名称 参数名 类型 所属类 约束 描述 data 7.修改群信息 im/imAction!updataGroupData.action输入参数 参数名称 参数名 类型 所属类 约束 描述 群id group_id String 1 群昵称 group_name String ? 群头像 group_head String ? 群简介 group_desc String ? 8.群id查询群 im/imAction!findGroupIdGroup.action输入参数 参数名称 参数名 类型 所属类 约束 描述 群组id group_id String 1 输出参数 参数名称 参数名 类型 所属类 约束 描述 data 群组对象 groupData ImGroupBean data ? 活动id activity_id String ImGroupBean ? 群id group_id String ImGroupBean ? 群创建时间 create_time String ImGroupBean ? 群名称 group_name String ImGroupBean ? 群简介 group_desc String ImGroupBean ? 群头像 group_head String ImGroupBean ? 群成员 group_member List ImGroupBean ? 群主 account String ImGroupBean ? 账号列表 memberRows list ImGroupBean ? 账号id id String ImAcctountBean ? 手机号码 mobile String ImAcctountBean ? 头像 head_url String ImAcctountBean ? 别名 nick String ImAcctountBean ? 账号 account String ImAcctountBean ? 性别 sex String ImAcctountBean ? 1.男2.女 年龄 age String ImAcctountBean ? 身高 height String ImAcctountBean ? 居住地 residence String ImAcctountBean ?]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[身份证打开器连接html]]></title>
      <url>%2F2017%2F04%2F16%2Fpro%2Fidcard%2F</url>
      <content type="text"><![CDATA[华视 CVR-100U 身份证书卡机html的二次开发 华视打卡器，html界面二次开发。主要注意事项1.下载正确的驱动包以及开发sdk2.安装文件路径权限3.浏览器运行权限必须以管理员身份运行 详细教程 第一步 下载开发所需的文件 进入华视官网下载页这里是做html开发所以下载对应一下的文件 驱动包 运行包 下载解压后文件夹 驱动包根据自己电脑配置和需求安装对应的版本 安装运行包 在上一个步骤安装CVRDLL.exe 中可能会出现 所以都必须使用以管理员的身份运行 第二步运行demo 特别注意运行IDCArdREader.ocx 文件必须得用浏览器的ActiveX控件使用目前支持ActiveX控件的小编了解的只有ie，尝试了用chrome安装IE Tab Multi 使用但是结果是这样无法使用↓ 用ie浏览器打开demo后 天杀的最必须注意的一点，在这里耗了很长时间，费了很多脑细胞，打电话给客服和技术没有解决的问题就是 我和小伙伴翻了很多网站，咨询了客服一边又一遍。后来我们找到了win7的一台电脑尝试成功了 但是换到了另外一台win7电脑上尝试又出现了这个问题。这到底系统问题还是什么问题呢。 后来发现了一个特点，能成功运行windows上面都没有出现这个情况 这个是需要管理员权限。可以说是导致读取txt失败的原因就是权限了 所以打开ie浏览器的时候必须以管理员的权限打开 二次开发就可以调用他demo里面的代码，其实相当简单主要代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152&lt;body style=&quot;text-align: center&quot;&gt; &lt;form id=&quot;form1&quot; runat=&quot;server&quot;&gt; &lt;OBJECT classid=&quot;clsid:10946843-7507-44FE-ACE8-2B3483D179B7&quot; id=&quot;CVR_IDCard&quot; name=&quot;CVR_IDCard&quot; width=&quot;0&quot; height=&quot;0&quot; &gt;&lt;/OBJECT&gt; &lt;script language=&quot;javascript&quot; type =&quot;text/javascript&quot;&gt; function ClearForm() &#123; document.all[&apos;Name&apos;].value = &quot;&quot;; document.all[&apos;Sex&apos;].value = &quot;&quot;; document.all[&apos;Nation&apos;].value = &quot;&quot;; document.all[&apos;Born&apos;].value = &quot;&quot;; document.all[&apos;Address&apos;].value = &quot;&quot;; document.all[&apos;CardNo&apos;].value = &quot;&quot;; document.all[&apos;IssuedAt&apos;].value = &quot;&quot;; document.all[&apos;EffectedDate&apos;].value = &quot;&quot;; document.all[&apos;ExpiredDate&apos;].value = &quot;&quot;; document.all[&apos;SAMID&apos;].value = &quot;&quot;; document.all[&apos;pic&apos;].src = &quot;&quot;; document.all[&apos;Picture&apos;].value = &quot;&quot;; document.all[&apos;PictureLen&apos;].value = &quot;&quot;; return true;&#125;function Button1_onclick() &#123; var CVR_IDCard = document.getElementById(&quot;CVR_IDCard&quot;); var strReadResult = CVR_IDCard.ReadCard(); if(strReadResult == &quot;0&quot;) &#123;ClearForm(); document.all[&apos;Name&apos;].value = CVR_IDCard.Name; document.all[&apos;Sex&apos;].value = CVR_IDCard.Sex; document.all[&apos;Nation&apos;].value = CVR_IDCard.Nation; document.all[&apos;Born&apos;].value = CVR_IDCard.Born; document.all[&apos;Address&apos;].value = CVR_IDCard.Address; document.all[&apos;CardNo&apos;].value = CVR_IDCard.CardNo; document.all[&apos;IssuedAt&apos;].value = CVR_IDCard.IssuedAt; document.all[&apos;EffectedDate&apos;].value = CVR_IDCard.EffectedDate; document.all[&apos;ExpiredDate&apos;].value = CVR_IDCard.ExpiredDate; document.all[&apos;SAMID&apos;].value = CVR_IDCard.SAMID; document.all[&apos;pic&apos;].src = CVR_IDCard.Pic; document.all[&apos;Picture&apos;].value = CVR_IDCard.Picture; document.all[&apos;PictureLen&apos;].value = CVR_IDCard.PictureLen &#125; else &#123; ClearForm(); alert(strReadResult); &#125; &#125; 运行结果]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[日志封装]]></title>
      <url>%2F2017%2F04%2F15%2Fpro%2Fandroid%2Flog%2F</url>
      <content type="text"><![CDATA[log 打印封装 log 打印对调至关重要，而android log打印只能打印字符串，而我们在调试中大部分都是java 对象。许多人使用toString 方法来打印，虽然这个方法可行，但是对象里又二级对象就不适用而且比较麻烦。接下来就介绍我封装的logA对象 ##使用gson配合打印 gson 不管是对象数据还是集合类可以很直观的打印json对象 长度换行，log打印有长度显示，如果超出长度则调用调用另一个打印 12345678910111213141516171819202122232425262728293031323334353637383940414243444546public static void e(Object content) &#123; show(&quot;ee&quot;, content);&#125;public static void a(Object content) &#123; show(&quot;aa&quot;, content);&#125;public static void texta(String str)&#123; if (str == null) &#123; Log.i(&quot;aa&quot;, &quot;str==null&quot;); return; &#125; Log.i(&quot;aa&quot;, str);&#125;public static void i(Object content) &#123; show(&quot;ii&quot;, content);&#125;private static void show(String name, Object obj) &#123; if (obj == null) &#123; Log.i(name, &quot;str==null&quot;); return; &#125; String str = new Gson().toJson(obj); int index = 0; int maxLength = 3000; String sub; if (str.length() &lt; maxLength) &#123; Log.i(name, str); &#125; else &#123; int num = str.length() / maxLength + 1; for (int i = 0; i &lt; num; i++) &#123; if (num - 1 == i) &#123; Log.i(name, str.substring(i * maxLength, str.length())); &#125; else &#123; Log.i(name, str.substring(i * maxLength, (i + 1) * maxLength)); &#125; &#125; &#125;&#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[gson]]></title>
      <url>%2F2017%2F04%2F15%2Fpro%2Fandroid%2Fgson%2F</url>
      <content type="text"><![CDATA[gson基本使用 gson json使用最频繁的工具在这里就不做过多的介绍只介绍一下基本使用和几个注意点 tojson将java对象转换为json123Gson gson = new Gson(); List persons = new ArrayList(); String str = gson.toJson(persons); fromjson将json字符串转换为实体对象123Gson提供了fromJson()方法来实现从Json字符串转化为到java实体的方法。 比如json字符串为：[&#123;“name”:”name0”,”age”:0&#125;] Person person = gson.fromJson(str, Person.class); 注意点在使用泛型转换时12345678910111213141516171819202122232425262728293031323334class GsonResponsePasare&lt;T&gt; implements ParameterizedType &#123; private final UtilsLog lg = UtilsLog.getLogger(GsonResponsePasare.class); public T deal(String response) &#123;// Type gsonType = new ParameterizedType() &#123;//...&#125;;//不建议该方式，推荐采用GsonResponsePasare实现ParameterizedType.因为getActualTypeArguments这里涉及获取GsonResponsePasare的泛型集合 Type gsonType = this; CommonResponse&lt;T&gt; commonResponse = new Gson().fromJson(response, gsonType); lg.e(&quot;Data is : &quot; + commonResponse.data, &quot;Class Type is : &quot; + commonResponse.data.getClass().toString()); return commonResponse.data; &#125; @Override public Type[] getActualTypeArguments() &#123; Class clz = this.getClass(); //这里必须注意在外面使用new GsonResponsePasare&lt;GsonResponsePasare.DataInfo&gt;()&#123;&#125;;实例化时必须带上&#123;&#125;,否则获取到的superclass为Object Type superclass = clz.getGenericSuperclass(); //getGenericSuperclass()获得带有泛型的父类 if (superclass instanceof Class) &#123; throw new RuntimeException(&quot;Missing type parameter.&quot;); &#125; ParameterizedType parameterized = (ParameterizedType) superclass; return parameterized.getActualTypeArguments(); &#125; @Override public Type getOwnerType() &#123; return null; &#125; @Override public Type getRawType() &#123; return CommonResponse.class; &#125; &#125; GsonBuilder基本配置 Gson g = new GsonBuilder().serializeNulls().setDateFormat(“yyyy-MM-dd hh:mm”).create();serializeNulls 设置此项对象为空也转换setDateFormat 将时间类型转换为对应格式的字符串]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[android定时缓存]]></title>
      <url>%2F2017%2F04%2F15%2Fpro%2Fandroid%2Fcache%2F</url>
      <content type="text"><![CDATA[定时缓存 给大家介绍一个比好好用轻量级缓存工具Acache,它类似javaEE的ehcache使用非常方便，可以设置自动过期时间 1234ACache mCache = ACache.get(this);mCache.put(&quot;test_key1&quot;, &quot;test value&quot;);mCache.put(&quot;test_key2&quot;, &quot;test value&quot;, 10);//保存10秒，如果超过10秒去获取这个key，将为nullmCache.put(&quot;test_key3&quot;, &quot;test value&quot;, 2 * ACache.TIME_DAY);//保存两天，如果超过两天去获取这个key，将为nul 使用起来就和使用map累死，key-value，第三个参数为是时间参数。如果设置了时间参数，则数据会将在超过该时间后自动清除如果没有设置时间参数，则数据会永久保存Acache可以完全代替sharedpreferences 使用，简介方便高效 Acache 下载文件]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[简单介绍封装技巧]]></title>
      <url>%2F2017%2F04%2F15%2Findex%2F</url>
      <content type="text"><![CDATA[android开发向导介绍 在开发中封装一些工具类对开发效率有极大的提示，下面就给大家介绍一些自己封装方法本文章简单介绍一些android开发工具类和学习路径 小编特别介绍封装神方法配合反射使用此乃封装利器12345泛型内部获取泛型类型Type type = getClass().getGenericSuperclass();Type trueType = ((ParameterizedType) type).getActualTypeArguments()[0];Class&lt;T&gt; cls = (Class&lt;T&gt;) trueType;LogA.e(cls.getClass());]]></content>
    </entry>

    
  
  
</search>
